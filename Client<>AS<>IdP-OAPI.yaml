openapi: 3.1.0
info:
  title: Open Payments Authorization Server - Identity Provider Connection
  version: '1.0'
  license:
    name: Apache 2.0
    identifier: Apache-2.0
  summary: Open Payments Authorization Server - Identity Provider Connection
  description: 'The Open Payments API is secured via [GNAP](https://datatracker.ietf.org/doc/html/draft-ietf-gnap-core-protocol). This specification describes the connection between the Open Payments Authorization Server and the Identity Provider.'
  contact:
    email: tech@interledger.org
servers:
  - url: 'https://openpayments.guide/auth'
tags:
  - name: front-channel
    description: Redirect URLs
  - name: back-channel
    description: Endpoints to request or modify grant information
paths:
  '/interact/{id}/{nonce}':
    get:
      summary: Start user interaction
      responses:
        '302':
          description: Found
          headers:
            Location:
              schema:
                type: string
              description: Identity server endpoint
            Cookie:
              schema:
                type: string
              description: Interaction id
      operationId: get-interact
      parameters:
        - schema:
            type: string
          name: id
          in: path
          required: true
          description: Interaction id
        - schema:
            type: string
          in: path
          name: nonce
          required: true
          description: 'Unique value to be used in the calculation of the "hash" query parameter sent to the callback URI, must be sufficiently random to be unguessable by an attacker.  MUST be generated by the client instance as a unique value for this request.'
      description: 'To start the user interaction for grant approval, this endpoint redirects the user to an Identity provider endpoint for authentication.'
      tags:
        - front-channel
  '/interact/{id}/{nonce}/finish':
    get:
      summary: Finish user interaction
      operationId: get-finish-interaction
      responses:
        '302':
          description: Found
          headers:
            Location:
              schema:
                type: string
              description: Client finish endpoint
      description: 'To finish the user interaction for grant approval, this endpoint redirects the user to the client''s finish url.'
      parameters:
        - schema:
            type: string
          in: path
          name: id
          required: true
          description: Interaction id
        - schema:
            type: string
          in: path
          name: nonce
          required: true
          description: 'Unique value to be used in the calculation of the "hash" query parameter sent to the callback URI, must be sufficiently random to be unguessable by an attacker.  MUST be generated by the client instance as a unique value for this request.'
      tags:
        - front-channel
  '/grant/{id}/{nonce}':
    get:
      summary: Lookup Grant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: array
                    items:
                      $ref: '#/components/schemas/access'
        '404':
          description: Not Found
      operationId: get-grant
      description: |
        The Identity Provider uses this endpoint to requests the grant details associated with the provided `interactId` on the front-channel. It will then display those details to the user to either accept or deny the grant.
      parameters:
        - schema:
            type: string
          name: id
          in: path
          required: true
          description: Interaction id
        - schema:
            type: string
          in: path
          name: nonce
          required: true
          description: 'Unique value to be used in the calculation of the "hash" query parameter sent to the callback URI, must be sufficiently random to be unguessable by an attacker.  MUST be generated by the client instance as a unique value for this request.'
      tags:
        - back-channel
  '/grant/{id}/{nonce}/{choice}':
    post:
      summary: Accept or reject a grant
      operationId: post-grant-choice
      responses:
        '202':
          description: Accepted
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: The Identity Provider uses this endpoint to submit the user's choice regarding accepting or rejecting a grant to Authorization Server.
      parameters:
        - schema:
            type: string
          name: id
          in: path
          required: true
          description: Interaction id
        - schema:
            type: string
          in: path
          name: nonce
          required: true
          description: 'Unique value to be used in the calculation of the "hash" query parameter sent to the callback URI, must be sufficiently random to be unguessable by an attacker.  MUST be generated by the client instance as a unique value for this request.'
        - schema:
            type: string
            enum:
              - accept
              - reject
          in: path
          name: choice
          required: true
          description: Indicates the consent choice for a grant (i.e. acceptance or rejection)
      tags:
        - back-channel
components:
  schemas:
    access:
      discriminator:
        propertyName: type
        mapping:
          account: '#/components/schemas/access-account'
          incoming-payment: '#/components/schemas/access-incoming'
          outgoing-payment: '#/components/schemas/access-outgoing'
          quote: '#/components/schemas/access-quote'
      oneOf:
        - $ref: '#/components/schemas/access-incoming'
        - $ref: '#/components/schemas/access-outgoing'
        - $ref: '#/components/schemas/access-quote'
      description: The access associated with the access token is described using objects that each contain multiple dimensions of access.
      unevaluatedProperties: false
    limits-outgoing:
      title: limits-outgoing
      description: Open Payments specific property that defines the limits under which outgoing payments can be created.
      type: object
      properties:
        receiver:
          $ref: '#/components/schemas/receiver'
        sendAmount:
          $ref: '#/components/schemas/amount'
        receiveAmount:
          $ref: '#/components/schemas/amount'
        interval:
          $ref: '#/components/schemas/interval'
      anyOf:
        - not:
            required:
              - interval
        - required:
            - sendAmount
        - required:
            - receiveAmount
    amount:
      title: amount
      type: object
      description: 'All amounts are maxima, i.e. multiple payments can be created under a grant as long as the total amounts of these payments do not exceed the maximum amount per interval as specified in the grant.'
      properties:
        value:
          type: string
          format: uint64
          description: 'The value is an unsigned 64-bit integer amount, represented as a string.'
        assetCode:
          type: string
          description: The assetCode is a code that indicates the underlying asset. In most cases this SHOULD be a 3-character ISO 4217 currency code.
        assetScale:
          type: integer
          minimum: 0
          maximum: 255
          description: 'The assetScale indicates how the value has been scaled relative to the natural scale of the asset. For example, an value of "1234" with an assetScale of 2 represents an amount of 12.34.'
      required:
        - value
        - assetCode
        - assetScale
    interval:
      title: Interval
      type: string
      description: '[ISO8601 repeating interval](https://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals)'
      examples:
        - 'R11/2022-08-24T14:15:22Z/P1M'
        - 'R/2017-03-01T13:00:00Z/2018-05-11T15:30:00Z'
        - 'R-1/P1Y2M10DT2H30M/2022-05-11T15:30:00Z'
    receiver:
      title: Receiver
      type: string
      description: The URL of the incoming payment or ILP STREAM connection that is being paid.
      format: uri
      pattern: '^https://(.+)/(incoming-payments|connections)/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      examples:
        - 'https://openpayments.guide/alice/incoming-payments/08394f02-7b7b-45e2-b645-51d04e7c330c'
        - 'https://openpayments.guide/connections/016da9d5-c9a4-4c80-a354-86b915a04ff8'
    access-outgoing:
      title: access-outgoing
      type: object
      properties:
        type:
          type: string
          enum:
            - outgoing-payment
          description: The type of resource request as a string.  This field defines which other fields are allowed in the request object.
        actions:
          type: array
          description: The types of actions the client instance will take at the RS as an array of strings.
          items:
            type: string
            enum:
              - create
              - read
              - read-all
              - list
              - list-all
          allOf:
            - contains:
                $ref: '#/components/schemas/read-actions'
              minContains: 0
              maxContains: 1
            - contains:
                $ref: '#/components/schemas/list-actions'
              minContains: 0
              maxContains: 1
          uniqueItems: true
        identifier:
          type: string
          format: uri
          description: A string identifier indicating a specific resource at the RS.
        limits:
          $ref: '#/components/schemas/limits-outgoing'
      required:
        - type
        - actions
        - identifier
    access-incoming:
      title: access-incoming
      type: object
      properties:
        type:
          type: string
          enum:
            - incoming-payment
          description: The type of resource request as a string.  This field defines which other fields are allowed in the request object.
        actions:
          type: array
          description: The types of actions the client instance will take at the RS as an array of strings.
          items:
            type: string
            enum:
              - create
              - complete
              - read
              - read-all
              - list
              - list-all
          allOf:
            - contains:
                $ref: '#/components/schemas/read-actions'
              minContains: 0
              maxContains: 1
            - contains:
                $ref: '#/components/schemas/list-actions'
              minContains: 0
              maxContains: 1
          uniqueItems: true
        identifier:
          type: string
          format: uri
          description: A string identifier indicating a specific resource at the RS.
      required:
        - type
        - actions
    access-quote:
      title: access-quote
      type: object
      properties:
        type:
          type: string
          enum:
            - quote
          description: The type of resource request as a string.  This field defines which other fields are allowed in the request object.
        actions:
          type: array
          description: The types of actions the client instance will take at the RS as an array of strings.
          items:
            type: string
            enum:
              - create
              - read
              - read-all
          allOf:
            - contains:
                $ref: '#/components/schemas/read-actions'
              minContains: 0
              maxContains: 1
          uniqueItems: true
      required:
        - type
        - actions
    read-actions:
      enum:
        - read
        - read-all
    list-actions:
      enum:
        - list
        - list-all
  securitySchemes:
    GNAP:
      name: Authorization
      type: apiKey
      in: header
