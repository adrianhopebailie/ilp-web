openapi: 3.1.0
info:
  title: Open Payments Authorization Server - Resource Server Connection
  version: '1.0'
  license:
    name: Apache 2.0
    identifier: Apache-2.0
  summary: Open Payments Authorization Server - Resource Server Connection
  description: 'The Open Payments API is secured via [GNAP](https://datatracker.ietf.org/doc/html/draft-ietf-gnap-core-protocol). This specification describes the connection between the Open Payments Authorization Server and the Open Payments Resource Server, which is an opinionated version of the [Grant Negotiation and Authorization Protocol Resource Server Connections](https://datatracker.ietf.org/doc/html/draft-ietf-gnap-resource-servers).'
  contact:
    email: tech@interledger.org
servers:
  - url: 'https://openpayments.guide/auth'
tags:
  - name: introspection
    description: Token introspection
paths:
  /introspect:
    parameters: []
    post:
      summary: Introspect Access Token
      operationId: post-introspect
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  active:
                    type: boolean
                  grant:
                    type: string
                  access:
                    type: array
                    items:
                      $ref: '#/components/schemas/access'
                  key:
                    $ref: '#/components/schemas/key'
                  client_id:
                    type: string
                    description: Opaque client identifier.
                required:
                  - active
              examples:
                Token Introspection:
                  value:
                    active: true
                    grant: 1ee48d97-8fa1-4ab4-b89d-95284b665517
                    access:
                      - type: outgoing-payment
                        actions:
                          - create
                          - read
                        identifier: 'https://openpayments.guide/alice'
                        limits:
                          interval: 'R12/2019-08-24T14:15:22Z/P1M'
                          receiver: 'https://openpayments.guide/bob/incoming-payments/48884225-b393-4872-90de-1b737e2491c2'
                          sendAmount:
                            value: '500'
                            assetCode: USD
                            assetScale: 2
                    key:
                      proof: httpsig
                      jwk:
                        alg: EdDSA
                        kid: 20f24ce2-a5f6-4f28-bf7d-ed52d0490187
                        kty: OKP
                        use: sig
                        crv: Ed25519
                        x: AAAAC3NzaC1lZDI1NTE5AAAAIK0wmN/Cr3JXqmLW7u+g9pTh+wyqDHpSQEIQczXkVx9q
                    client_id: 581a1dd9-aef5-4b1a-9d78-c1afc4a5fdbf
        '404':
          description: Not Found
      description: Introspect an access token to get grant details.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: The access token value presented to the RS by the client instance.
                proof:
                  type: string
                  description: The proofing method used by the client instance to bind the token to the RS request.
                resource_server:
                  oneOf:
                    - $ref: '#/components/schemas/key'
                    - type: string
                  description: 'The identification used to authenticate the resource server making this call, either by value or by reference.'
                access:
                  type: array
                  description: The minimum access rights required to fulfill the request.
                  items:
                    $ref: '#/components/schemas/access'
              required:
                - access_token
                - resource_server
            examples:
              Introspect token:
                value:
                  access_token: OS9M2PMHKUR64TB8N6BW7OZB8CDFONP219RP1LT0
                  proof: httpsig
                  resource_server: 7C7C4AZ9KHRS6X63AJAO
      tags:
        - introspection
components:
  schemas:
    access:
      discriminator:
        propertyName: type
        mapping:
          account: '#/components/schemas/access-account'
          incoming-payment: '#/components/schemas/access-incoming'
          outgoing-payment: '#/components/schemas/access-outgoing'
          quote: '#/components/schemas/access-quote'
      oneOf:
        - $ref: '#/components/schemas/access-incoming'
        - $ref: '#/components/schemas/access-outgoing'
        - $ref: '#/components/schemas/access-quote'
      description: The access associated with the access token is described using objects that each contain multiple dimensions of access.
      unevaluatedProperties: false
    limits-outgoing:
      title: limits-outgoing
      description: Open Payments specific property that defines the limits under which outgoing payments can be created.
      type: object
      properties:
        receiver:
          $ref: '#/components/schemas/receiver'
        sendAmount:
          $ref: '#/components/schemas/amount'
        receiveAmount:
          $ref: '#/components/schemas/amount'
        interval:
          $ref: '#/components/schemas/interval'
      anyOf:
        - not:
            required:
              - interval
        - required:
            - sendAmount
        - required:
            - receiveAmount
    amount:
      title: amount
      type: object
      description: 'All amounts are maxima, i.e. multiple payments can be created under a grant as long as the total amounts of these payments do not exceed the maximum amount per interval as specified in the grant.'
      properties:
        value:
          type: string
          format: uint64
          description: 'The value is an unsigned 64-bit integer amount, represented as a string.'
        assetCode:
          type: string
          description: The assetCode is a code that indicates the underlying asset. In most cases this SHOULD be a 3-character ISO 4217 currency code.
        assetScale:
          type: integer
          minimum: 0
          maximum: 255
          description: 'The assetScale indicates how the value has been scaled relative to the natural scale of the asset. For example, an value of "1234" with an assetScale of 2 represents an amount of 12.34.'
      required:
        - value
        - assetCode
        - assetScale
    interval:
      title: Interval
      type: string
      description: '[ISO8601 repeating interval](https://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals)'
      examples:
        - 'R11/2022-08-24T14:15:22Z/P1M'
        - 'R/2017-03-01T13:00:00Z/2018-05-11T15:30:00Z'
        - 'R-1/P1Y2M10DT2H30M/2022-05-11T15:30:00Z'
    receiver:
      title: Receiver
      type: string
      description: The URL of the incoming payment or ILP STREAM connection that is being paid.
      format: uri
      pattern: '^https://(.+)/(incoming-payments|connections)/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      examples:
        - 'https://openpayments.guide/alice/incoming-payments/08394f02-7b7b-45e2-b645-51d04e7c330c'
        - 'https://openpayments.guide/connections/016da9d5-c9a4-4c80-a354-86b915a04ff8'
    key:
      title: key
      type: object
      description: A key presented by value MUST be a public key.
      properties:
        proof:
          type: string
          enum:
            - httpsig
          description: The form of proof that the client instance will use when presenting the key.
        jwk:
          type: object
          description: 'The public key and its properties represented as a JSON Web Key [[RFC7517](https://datatracker.ietf.org/doc/html/rfc7517)].'
          additionalProperties: false
          required:
            - alg
            - kid
            - kty
            - crv
            - x
          properties:
            alg:
              type: string
              description: 'The cryptographic algorithm family used with the key. The only allowed value is `EdDSA`. '
              enum:
                - EdDSA
            kid:
              type: string
              description: A Key ID can be used to match a specific key.
            kty:
              type: string
              enum:
                - OKP
              description: 'The Key Type. The only allowed value is `OKP`. '
            use:
              type: string
              enum:
                - sig
              description: The intended use of the key.
            crv:
              type: string
              enum:
                - Ed25519
              description: 'The cryptographic curve used with the key. The only allowed value is `Ed25519`. '
            x:
              type: string
              description: Public key encoded using the `base64url` encoding.
            key_ops:
              type: array
              description: Array of allowed operations this key may be used for.
              items:
                type: string
                enum:
                  - sign
                  - verify
            nbf:
              type: integer
              description: UNIX timestamp indicating the earliest this key may be used.
            exp:
              type: integer
              description: UNIX timestamp indicating the latest this key may be used.
            revoked:
              type: boolean
              description: The revocation status of the key.
      required:
        - proof
        - jwk
    access-outgoing:
      title: access-outgoing
      type: object
      properties:
        type:
          type: string
          enum:
            - outgoing-payment
          description: The type of resource request as a string.  This field defines which other fields are allowed in the request object.
        actions:
          type: array
          description: The types of actions the client instance will take at the RS as an array of strings.
          items:
            type: string
            enum:
              - create
              - read
              - read-all
              - list
              - list-all
          allOf:
            - contains:
                $ref: '#/components/schemas/read-actions'
              minContains: 0
              maxContains: 1
            - contains:
                $ref: '#/components/schemas/list-actions'
              minContains: 0
              maxContains: 1
          uniqueItems: true
        identifier:
          type: string
          format: uri
          description: A string identifier indicating a specific resource at the RS.
        limits:
          $ref: '#/components/schemas/limits-outgoing'
      required:
        - type
        - actions
        - identifier
    access-incoming:
      title: access-incoming
      type: object
      properties:
        type:
          type: string
          enum:
            - incoming-payment
          description: The type of resource request as a string.  This field defines which other fields are allowed in the request object.
        actions:
          type: array
          description: The types of actions the client instance will take at the RS as an array of strings.
          items:
            type: string
            enum:
              - create
              - complete
              - read
              - read-all
              - list
              - list-all
          allOf:
            - contains:
                $ref: '#/components/schemas/read-actions'
              minContains: 0
              maxContains: 1
            - contains:
                $ref: '#/components/schemas/list-actions'
              minContains: 0
              maxContains: 1
          uniqueItems: true
        identifier:
          type: string
          format: uri
          description: A string identifier indicating a specific resource at the RS.
      required:
        - type
        - actions
    access-quote:
      title: access-quote
      type: object
      properties:
        type:
          type: string
          enum:
            - quote
          description: The type of resource request as a string.  This field defines which other fields are allowed in the request object.
        actions:
          type: array
          description: The types of actions the client instance will take at the RS as an array of strings.
          items:
            type: string
            enum:
              - create
              - read
              - read-all
          allOf:
            - contains:
                $ref: '#/components/schemas/read-actions'
              minContains: 0
              maxContains: 1
          uniqueItems: true
      required:
        - type
        - actions
    read-actions:
      enum:
        - read
        - read-all
    list-actions:
      enum:
        - list
        - list-all
  securitySchemes:
    GNAP:
      name: Authorization
      type: apiKey
      in: header
